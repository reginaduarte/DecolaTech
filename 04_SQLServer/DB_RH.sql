USE DB_RH
GO

CREATE TABLE TB_AREAS (
	ID INT NOT NULL IDENTITY(1,1),
	DESCRICAO VARCHAR(100) NOT NULL,
	PRIMARY KEY(ID)
)
GO

CREATE TABLE TB_CARGOS (
	ID INT NOT NULL IDENTITY(1,1),
	ID_AREA INT NOT NULL,
	DESCRICAO VARCHAR(100) NOT NULL,
	SALARIO FLOAT NOT NULL,
	TP_SALARIO SMALLINT NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_AREA) REFERENCES TB_AREAS(ID),
	CHECK(TP_SALARIO = 1 OR TP_SALARIO = 2) -- 1: MENSAL, 2: HORA
)
GO

CREATE TABLE TB_CANDIDATOS
(
	CPF VARCHAR(11) NOT NULL,
	NOME VARCHAR(60) NOT NULL,
	TELEFONE VARCHAR(20) not null,
	EMAIL varchar(60) not null
	PRIMARY KEY (CPF),
	CHECK(LEN(CPF) = 11)
)
GO

CREATE TABLE TB_INSCRICOES (
	ID INT NOT NULL IDENTITY(1,1),
	ID_CARGO INT NOT NULL,
	CPF VARCHAR(11) NOT NULL,
	SITUACAO SMALLINT DEFAULT 0,
	DATA_INSCRICAO DATETIME NOT NULL,
	DATA_EFETIVACAO DATETIME,
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_CARGO) REFERENCES TB_CARGOS(ID),
	FOREIGN KEY(CPF) REFERENCES TB_CANDIDATOS(CPF),
	CHECK(SITUACAO BETWEEN 0 AND 2) --0: RECEM INSCRITO, 1: CONTRATADO, 2: EFETIVADO
)
GO

/* 
	1. Na tabela TB_CARGOS, adicionar restrição impedindo que o salário seja negativo, ou igual a zero(> 0)
	ALTER TABLE TB_CARGOS
	ADD CHECK (SALARIO > 0)
	GO

	2. Na tabela TB_CANDIDATOS, o e-mail deve ser único (exclusivo) - UNIQUE
	ALTER TABLE TB_CANDIDATOS
	ADD UNIQUE (EMAIL)
	GO

	3. Não deve ser permitido que o candidato se inscreva em uma vaga mais de uma vez.
	ALTER TABLE TB_INSCRICOES
	ADD UNIQUE (ID_CARGO, CPF)
	GO
*/

	ALTER TABLE TB_CARGOS
	ADD CHECK (SALARIO > 0)
	GO

	ALTER TABLE TB_CANDIDATOS
	ADD UNIQUE (EMAIL)
	GO

	ALTER TABLE TB_INSCRICOES
	ADD UNIQUE (ID_CARGO, CPF)
	GO